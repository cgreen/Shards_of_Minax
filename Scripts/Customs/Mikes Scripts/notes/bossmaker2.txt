I would like to come up with a series of champ spawn boss fights with "Ultimate Masters".  These masters would drop a 200 power scroll and several unique items, and there will be a master for each skill.  I would like the master's to be famous people from history and pop culture, appropriate for the skill.  I am going to be using this as a Champion for a champ spawn so be sure to follow the format for a BaseChampion and include all of the elements in the example.  Make up any new items you need.  Below is the ultimate master I'd like you to create right now, and below that is an example of a alchemy boss champion spawn for reference:

Ultimate Master to create:
Alchemy
Ultimate Master: Paracelsus (The Father of Toxicology)
Special Drops: 
- Elixir of Life (heals fully)
- Philosopher's Stone (turns any metal into gold for crafting)
Special Abilities:
- Potion Explosion: Throws multiple explosive potions causing area damage.
- Toxic Cloud: Creates a cloud of poison gas that lingers.
- Transmute: Temporarily turns players into gold statues, immobilizing them.

Alchemy Boss Example:
using System;
using System.Collections;
using Server.Engines.CannedEvil;
using Server.Items;
using Server.Network;

namespace Server.Mobiles
{
    [CorpseName("corpse of Paracelsus")]
    public class UltimateMasterAlchemist : BaseChampion
    {
        private DateTime m_NextAbilityTime;

        [Constructable]
        public UltimateMasterAlchemist()
            : base(AIType.AI_Mage)
        {
            Name = "Paracelsus";
            Title = "The Father of Toxicology";
            Body = 0x190;
            Hue = 0x83F;

            SetStr(305, 425);
            SetDex(72, 150);
            SetInt(505, 750);

            SetHits(4800);
            SetMana(2500);

            SetDamage(25, 35);

            SetDamageType(ResistanceType.Physical, 25);
            SetDamageType(ResistanceType.Fire, 25);
            SetDamageType(ResistanceType.Cold, 25);
            SetDamageType(ResistanceType.Poison, 25);

            SetResistance(ResistanceType.Physical, 60, 70);
            SetResistance(ResistanceType.Fire, 60, 70);
            SetResistance(ResistanceType.Cold, 60, 70);
            SetResistance(ResistanceType.Poison, 90, 100);
            SetResistance(ResistanceType.Energy, 50, 60);

            SetSkill(SkillName.EvalInt, 120.0);
            SetSkill(SkillName.Magery, 120.0);
            SetSkill(SkillName.Meditation, 120.0);
            SetSkill(SkillName.Poisoning, 120.0);
            SetSkill(SkillName.MagicResist, 120.0);
            SetSkill(SkillName.Tactics, 120.0);
            SetSkill(SkillName.Wrestling, 120.0);

            Fame = 22500;
            Karma = -22500;

            VirtualArmor = 70;
			
			AddItem(new FancyShirt(Utility.RandomGreenHue()));
            AddItem(new LongPants(Utility.RandomYellowHue()));
            AddItem(new Cloak(Utility.RandomPinkHue()));
            AddItem(new Sandals());

            HairItemID = 0x203B; // Short Hair
            HairHue = 0x94;
        }

        public UltimateMasterAlchemist(Serial serial)
            : base(serial)
        {
        }

        public override ChampionSkullType SkullType { get { return ChampionSkullType.Power; } }

        public override Type[] UniqueList
        {
            get { return new Type[] { typeof(ElixirOfLife), typeof(PhilosophersStone) }; }
        }

        public override Type[] SharedList
        {
            get { return new Type[] { typeof(ParacelsusTome), typeof(PotionKeg) }; }
        }

        public override Type[] DecorativeList
        {
            get { return new Type[] { typeof(ElixirOfLife), typeof(MysticalAlembic) }; }
        }

        public override MonsterStatuetteType[] StatueTypes
        {
            get { return new MonsterStatuetteType[] { }; }
        }

        public override void GenerateLoot()
        {
            AddLoot(LootPack.UltraRich, 3);
            AddLoot(LootPack.FilthyRich);
            AddLoot(LootPack.Gems, 6);
        }

        public override void OnDeath(Container c)
        {
            base.OnDeath(c);

            c.DropItem(new PowerScroll(SkillName.Alchemy, 200.0));

            if (Utility.RandomDouble() < 0.6)
                c.DropItem(new ParacelsusTome());

            if (Utility.RandomDouble() < 0.6)
                c.DropItem(new MysticalAlembic());
        }

        public override void OnGaveMeleeAttack(Mobile defender)
        {
            base.OnGaveMeleeAttack(defender);

            if (DateTime.Now > m_NextAbilityTime)
            {
                switch (Utility.Random(3))
                {
                    case 0: PotionExplosion(); break;
                    case 1: ToxicCloud(); break;
                    case 2: Transmute(defender); break;
                }

                m_NextAbilityTime = DateTime.Now + TimeSpan.FromSeconds(Utility.RandomMinMax(20, 30));
            }
        }

        public void PotionExplosion()
        {
            ArrayList targets = new ArrayList();

            foreach (Mobile m in this.GetMobilesInRange(8))
            {
                if (m != this && m.Player && this.CanBeHarmful(m))
                    targets.Add(m);
            }

            for (int i = 0; i < targets.Count; ++i)
            {
                Mobile m = (Mobile)targets[i];

                DoHarmful(m);

                int damage = Utility.RandomMinMax(60, 80);

                AOS.Damage(m, this, damage, 0, 0, 0, 100, 0);

                m.FixedParticles(0x36BD, 20, 10, 5044, EffectLayer.Head);
                m.PlaySound(0x207);
            }
        }

        public void ToxicCloud()
        {
            ArrayList targets = new ArrayList();

            foreach (Mobile m in this.GetMobilesInRange(8))
            {
                if (m != this && m.Player && this.CanBeHarmful(m))
                    targets.Add(m);
            }

            for (int i = 0; i < targets.Count; ++i)
            {
                Mobile m = (Mobile)targets[i];

                DoHarmful(m);

                m.ApplyPoison(this, Poison.Lethal);

                m.FixedParticles(0x36B0, 1, 14, 0x26B8, 0x3F, 0x7, EffectLayer.Head);
                m.PlaySound(0x229);
            }
        }

        public void Transmute(Mobile defender)
        {
            if (defender != null)
            {
                defender.FixedParticles(0x376A, 9, 32, 5007, EffectLayer.Waist);
                defender.PlaySound(0x1FA);

                defender.Paralyze(TimeSpan.FromSeconds(6.0));

                defender.SendLocalizedMessage(1070840); // You have been turned into a statue!
            }
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0); // version
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }
}



I am using an older version of C# so keep this in mind:
Always use features compatible with C# 2.0/3.0.
Avoid newer C# constructs like interpolated strings, LINQ, var, and async/await.