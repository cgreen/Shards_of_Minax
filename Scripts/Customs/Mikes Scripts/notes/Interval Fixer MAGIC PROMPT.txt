I would like your help to modify a ServUO monster script to have random starting intervals in the abilities. I want the full modified script.  This is the procedure:

Instructions for Adding Random Starting Intervals

1. Define Variables for Ability Cooldowns
   - Add private fields to track the next time each ability can be used.
   - Add a boolean field to track if random intervals have been initialized.


   private DateTime m_NextAbility1;
   private DateTime m_NextAbility2;
   // Add more fields as needed

   private bool m_AbilitiesInitialized;


2. Initialize Variables in the Constructor
   - Set the boolean flag to `false` to indicate that abilities are not yet initialized.


   [Constructable]
   public YourMonsterClass()
       : base(AIType.AI_Melee, FightMode.Closest, 10, 1, 0.2, 0.4)
   {
       // Other initialization code

       m_AbilitiesInitialized = false; // Set the flag to false
   }


3. Set Random Start Times in `OnThink` Method
   - Use a random number generator to set initial cooldowns when the combat starts.


   public override void OnThink()
   {
       base.OnThink();

       if (Combatant != null)
       {
           if (!m_AbilitiesInitialized)
           {
               Random rand = new Random();
               m_NextAbility1 = DateTime.UtcNow + TimeSpan.FromSeconds(rand.Next(1, 30));
               m_NextAbility2 = DateTime.UtcNow + TimeSpan.FromSeconds(rand.Next(1, 40));
               // Set more initial times as needed
               m_AbilitiesInitialized = true;
           }

           if (DateTime.UtcNow >= m_NextAbility1)
           {
               Ability1();
           }

           if (DateTime.UtcNow >= m_NextAbility2)
           {
               Ability2();
           }

           // Add more checks for additional abilities
       }
   }


4. Implement Ability Methods
   - Define the methods for each ability and update their cooldowns after they are used.


   private void Ability1()
   {
       // Ability logic
       
       m_NextAbility1 = DateTime.UtcNow + TimeSpan.FromSeconds(30); // Cooldown for Ability1
   }

   private void Ability2()
   {
       // Ability logic
       
       m_NextAbility2 = DateTime.UtcNow + TimeSpan.FromSeconds(45); // Cooldown for Ability2
   }


5. Reset Initialization Flag on Deserialization
   - Ensure that the initialization flag is reset when the object is deserialized, so it can reinitialize the random intervals when loaded from a saved state.


   public override void Serialize(GenericWriter writer)
   {
       base.Serialize(writer);
       writer.Write((int)0); // version
   }

   public override void Deserialize(GenericReader reader)
   {
       base.Deserialize(reader);
       int version = reader.ReadInt();

       m_AbilitiesInitialized = false; // Reset the initialization flag
   }


Summary
1. Add Private Fields: Define fields to track ability cooldowns and initialization status.
2. Initialize in Constructor: Set the initialization flag to `false` in the constructor.
3. Randomize Timing in `OnThink`: Set random start times for abilities in the `OnThink` method if not already initialized.
4. Define Ability Methods: Implement methods for each ability and update their cooldowns after use.
5. Reset on Deserialization: Reset the initialization flag in the `Deserialize` method to ensure proper reinitialization after loading from a saved state.

By following these instructions, you can add dynamic, randomized start intervals for abilities to any monster with similar ability structures.


Here is an example of a creature with random starting intervals on the abilities:

using System;
using Server;
using Server.Items;
using Server.Network;
using Server.Mobiles;

namespace Server.Mobiles
{
    [CorpseName("a storm alligator corpse")]
    public class StormAlligator : BaseCreature
    {
        private DateTime m_NextLightningStrike;
        private DateTime m_NextStormAura;
        private bool m_AbilitiesActivated; // Flag to track if abilities have been initialized

        [Constructable]
        public StormAlligator()
            : base(AIType.AI_Melee, FightMode.Closest, 10, 1, 0.2, 0.4)
        {
            Name = "a storm alligator";
            Body = 0xCA; // Alligator body
            Hue = 1157; // Unique stormy hue
            BaseSoundID = 660;

            SetStr(100, 150);
            SetDex(60, 80);
            SetInt(20, 40);

            SetHits(80, 100);
            SetStam(80, 100);
            SetMana(0);

            SetDamage(20, 30);

            SetDamageType(ResistanceType.Physical, 80);
            SetDamageType(ResistanceType.Energy, 20);

            SetResistance(ResistanceType.Physical, 40, 50);
            SetResistance(ResistanceType.Fire, 10, 20);
            SetResistance(ResistanceType.Cold, 20, 30);
            SetResistance(ResistanceType.Poison, 10, 20);
            SetResistance(ResistanceType.Energy, 70, 80);

            SetSkill(SkillName.MagicResist, 50.1, 70.0);
            SetSkill(SkillName.Tactics, 70.1, 90.0);
            SetSkill(SkillName.Wrestling, 70.1, 90.0);

            Fame = 1200;
            Karma = -1200;

            VirtualArmor = 40;

            m_AbilitiesActivated = false; // Initialize flag
        }

        public StormAlligator(Serial serial)
            : base(serial)
        {
        }

        public override int Meat { get { return 1; } }
        public override int Hides { get { return 20; } }
        public override HideType HideType { get { return HideType.Spined; } }
        public override FoodType FavoriteFood { get { return FoodType.Meat | FoodType.Fish; } }

        public override void OnThink()
        {
            base.OnThink();

            if (Combatant != null)
            {
                if (!m_AbilitiesActivated)
                {
                    // Set random intervals for abilities
                    Random rand = new Random();
                    m_NextLightningStrike = DateTime.UtcNow + TimeSpan.FromSeconds(rand.Next(1, 20));
                    m_NextStormAura = DateTime.UtcNow + TimeSpan.FromSeconds(rand.Next(1, 30));
                    m_AbilitiesActivated = true; // Set the flag to prevent re-initializing
                }

                if (DateTime.UtcNow >= m_NextLightningStrike)
                {
                    LightningStrike();
                }

                if (DateTime.UtcNow >= m_NextStormAura)
                {
                    StormAura();
                }
            }
        }

        private void LightningStrike()
        {
            if (Combatant != null)
            {
                Mobile target = Combatant as Mobile;
                if (target != null && target.Alive)
                {
                    target.Damage(Utility.RandomMinMax(15, 25), this);
                    PublicOverheadMessage(MessageType.Regular, 0x3B2, true, "* The storm alligator calls down lightning! *");
                    m_NextLightningStrike = DateTime.UtcNow + TimeSpan.FromSeconds(30);
                }
            }
        }

        private void StormAura()
        {
            if (Combatant != null)
            {
                foreach (Mobile m in GetMobilesInRange(5))
                {
                    if (m != this && m.Alive && m != Combatant)
                    {
                        m.Damage(Utility.RandomMinMax(5, 10), this);
                        m.SendMessage("You are struck by the storm aura of the alligator!");
                    }
                }

                PublicOverheadMessage(MessageType.Regular, 0x3B2, true, "* The storm alligator creates a stormy aura around it! *");
                m_NextStormAura = DateTime.UtcNow + TimeSpan.FromSeconds(60);
            }
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0); // version
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();

            m_AbilitiesActivated = false; // Reset flag on deserialize
        }
    }
}








Can you help me with this task?  I will give you the script to moddify in the next message