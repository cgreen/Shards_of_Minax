using System;
using Server;
using Server.Items;
using Server.Mobiles;

namespace Server.Mobiles
{
    [CorpseName("corpse of a unique goat")]
    public class RandomRuminant : BaseCreature
    {
        private static readonly int[] ridableBodies = new int[] { 0xD1, 0x58, 0xCF, 0xDF }; // Ruminant body values
        private static readonly string[] wordBank1 = new string[]
        {
            "Fluffy", "Cuddly", "Gentle", "Loyal", "Friendly",
            "Adorable", "Cute", "Charming", "Sweet", "Lovely",
            "Furry", "Soft", "Cozy", "Warm", "Snuggly",
            "Happy", "Cheerful", "Joyful", "Playful", "Bouncy",
            "Wooly", "Fuzzy", "Hairy", "Shaggy", "Bushy"
        };

        private static readonly string[] wordBank2 = new string[]
        {
            "Sheep", "Goat", "Cow", "Bull", "Deer",
            "Elk", "Moose", "Giraffe", "Camel", "Llama",
            "Alpaca", "Bison", "Buffalo", "Yak", "Antelope",
            "Gazelle", "Impala", "Kudu", "Eland", "Wildebeest"
        };

        private static readonly AIType[] aiTypes = new AIType[]
        {
            AIType.AI_Animal, // Adjust AI types suitable for ridables
            AIType.AI_Melee,
        };

        private static readonly FightMode[] fightModes = new FightMode[]
        {
            FightMode.Closest,
            FightMode.Aggressor
        };

        [Constructable]
        public RandomRuminant() : base(AIType.AI_Animal, FightMode.Closest, 10, 1, 0.2, 0.4)
        {
            Body = ridableBodies[Utility.Random(ridableBodies.Length)];
            Hue = Utility.RandomMinMax(1, 3000);
            Name = wordBank1[Utility.Random(wordBank1.Length)] + " " + wordBank2[Utility.Random(wordBank2.Length)];

            SetStr(Utility.RandomMinMax(50, 500));
            SetDex(Utility.RandomMinMax(50, 500));
            SetInt(Utility.RandomMinMax(50, 500));
            SetHits(Utility.RandomMinMax(100, 500));

            AI = aiTypes[Utility.Random(aiTypes.Length)];
            FightMode = fightModes[Utility.Random(fightModes.Length)];

            SetSkill(SkillName.Wrestling, Utility.RandomMinMax(30, 100));
            SetSkill(SkillName.Tactics, Utility.RandomMinMax(30, 100));
            // Include other skills relevant to mounts if necessary

            SetResistance(ResistanceType.Physical, Utility.RandomMinMax(20, 50));
            SetResistance(ResistanceType.Fire, Utility.RandomMinMax(20, 50));
            SetResistance(ResistanceType.Cold, Utility.RandomMinMax(20, 50));
            SetResistance(ResistanceType.Poison, Utility.RandomMinMax(20, 50));
            SetResistance(ResistanceType.Energy, Utility.RandomMinMax(20, 50));

			Tamable = true;
			ControlSlots = Utility.RandomMinMax(1, 5);
			MinTameSkill = Utility.RandomMinMax(1, 100);

            PackItem(new Gold(Utility.RandomMinMax(10, 750)));
        }

        public RandomRuminant(Serial serial) : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write((int)0); // version
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }
}
