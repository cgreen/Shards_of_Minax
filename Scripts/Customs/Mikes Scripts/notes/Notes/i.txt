using System;
using Server.Items;
using Server.Targeting;

namespace Server.Mobiles
{
	[CorpseName("corpse of a fierce barbarian")]
	public class Barbarian : BaseCreature
	{
		private TimeSpan m_SpeechDelay = TimeSpan.FromSeconds(12.0); // time between barbarian speech
		public DateTime m_NextSpeechTime;

		[Constructable]
		public Barbarian() : base(AIType.AI_Warrior, FightMode.Closest, 10, 1, 0.2, 0.5)
		{
			Hue = Utility.RandomSkinHue();

			if (Female = Utility.RandomBool())
			{
				Body = 0x191;
				Name = NameList.RandomName("barbarian_female");
			}
			else
			{
				Body = 0x190;
				Name = NameList.RandomName("barbarian_male");
			}

			Item hair = new Item(Utility.RandomList(0x203B, 0x203C, 0x203D, 0x2048));
			hair.Hue = Utility.RandomHairHue();
			hair.Layer = Layer.Hair;
			hair.Movable = false;

			Item weapon;
			if (Utility.RandomBool())
				weapon = new VikingSword();
			else
				weapon = new BattleAxe();

			Item chest = new HideChest();
			Item legs = new HidePants();
			Item boots = new Boots();

			AddItem(hair);
			AddItem(chest);
			AddItem(legs);
			AddItem(boots);
			AddItem(weapon);
			weapon.Movable = false;

			SetStr(450, 480);
			SetDex(120, 140);
			SetInt(35, 55);
			SetHits(290, 320);
			VirtualArmor = 50;
			SpeechHue = Utility.RandomDyedHue();

			SetDamage(20, 28);

			SetSkill(SkillName.Tactics, 75.1, 100.0);
			SetSkill(SkillName.Swords, 70.1, 95.0);
			SetSkill(SkillName.Fencing, 45.1, 70.0);
			SetSkill(SkillName.Macing, 45.1, 70.0);
			SetSkill(SkillName.MagicResist, 45.1, 60.0);
			
			Fame = 2500;
			Karma = -2500;

			m_NextSpeechTime = DateTime.Now + m_SpeechDelay;
		}

		public override int TreasureMapLevel { get { return 3; } }
		public override bool AlwaysMurderer { get { return true; } }
		public override bool CanRummageCorpses { get { return true; } }
		public override bool ShowFameTitle { get { return false; } }
		public override bool ClickTitle { get { return false; } }

		public override void OnThink()
		{
			if (DateTime.Now >= m_NextSpeechTime)
			{
				Mobile combatant = this.Combatant;

				if (combatant != null && combatant.Map == this.Map && combatant.InRange(this, 8))
				{
					int phrase = Utility.Random(4);

					switch (phrase)
					{
						case 0: this.Say(true, "For the horde!"); break;
						case 1: this.Say(true, "Feel my blade!"); break;
						case 2: this.Say(true, "I'll crush you!"); break;
						case 3: this.Say(true, "You cannot defeat me!"); break;
					}
					
					m_NextSpeechTime = DateTime.Now + m_SpeechDelay;
				}

				base.OnThink();
			}
		}

		public override void GenerateLoot()
		{
			PackGem();
			PackGold(250, 300);
			AddLoot(LootPack.Rich);
			PackItem(new Bandage(Utility.RandomMinMax(5, 15)));
		}

		public Barbarian(Serial serial) : base(serial)
		{
		}

		public override void Serialize(GenericWriter writer)
		{
			base.Serialize(writer);
			writer.Write((int)0);
		}

		public override void Deserialize(GenericReader reader)
		{
			base.Deserialize(reader);
			int version = reader.ReadInt();
		}
	}
}
